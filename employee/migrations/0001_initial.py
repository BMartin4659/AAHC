# Generated by Django 3.1.2 on 2020-11-10 07:27

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=100)),
                ('phone', models.CharField(max_length=10)),
                ('us_citizen', models.BooleanField()),
                ('over18', models.BooleanField()),
                ('dob', models.DateField(null=True)),
                ('position', models.CharField(max_length=50)),
                ('salary', models.FloatField(blank=True)),
                ('date_hired', models.DateField(null=True)),
                ('pay_rate', models.FloatField(blank=True)),
                ('been_convicted', models.BooleanField()),
                ('explain_conviction', models.TextField(null=True)),
                ('military_service', models.BooleanField()),
                ('branch', models.CharField(max_length=100)),
                ('veteran', models.BooleanField()),
                ('position_applying', models.CharField(max_length=255)),
                ('howDidYouHearAboutPosition', models.CharField(max_length=255)),
                ('expected_rate', models.FloatField(blank=True)),
                ('expect_weekly_rate', models.FloatField(blank=True)),
                ('date_availabl', models.DateField(null=True)),
                ('resume', models.FileField(upload_to='')),
                ('social_security', models.FileField(upload_to='')),
                ('gov_id', models.FileField(upload_to='')),
                ('high_school', models.CharField(max_length=255)),
                ('last_year_completed', models.CharField(choices=[('9', '9'), ('10', '10'), ('11', '11'), ('12', '12')], max_length=2)),
                ('graduated', models.BooleanField()),
                ('college', models.CharField(max_length=255)),
                ('last_collegeYear_completed', models.CharField(choices=[('9', '9'), ('10', '10'), ('11', '11'), ('12', '12')], max_length=2)),
                ('major', models.CharField(max_length=255)),
                ('trade_school', models.CharField(max_length=255)),
                ('graduatedTrade', models.BooleanField()),
                ('ged', models.BooleanField()),
                ('list_skills', models.TextField(null=True)),
                ('nameOfEmployer', models.CharField(max_length=255)),
                ('jobTitle', models.CharField(max_length=255)),
                ('dateFrom', models.DateField(null=True)),
                ('dateTo', models.DateField(null=True)),
                ('ok_to_contact', models.BooleanField()),
                ('contact_number', models.CharField(max_length=10)),
                ('reason_for_leaving', models.CharField(max_length=255)),
                ('anyDayAnyHour', models.BooleanField()),
                ('workHoliday', models.BooleanField()),
                ('gotTransportation', models.BooleanField()),
                ('willingToTravel', models.BooleanField()),
                ('monday_from', models.DateField(null=True)),
                ('monday_to', models.DateField(null=True)),
                ('tuesday_from', models.DateField(null=True)),
                ('tuesday_to', models.DateField(null=True)),
                ('wenesday_from', models.DateField(null=True)),
                ('wenesday_to', models.DateField(null=True)),
                ('thursday_from', models.DateField(null=True)),
                ('thursday_to', models.DateField(null=True)),
                ('friday_from', models.DateField(null=True)),
                ('friday_to', models.DateField(null=True)),
                ('saturday_from', models.DateField(null=True)),
                ('saturday_to', models.DateField(null=True)),
                ('sunday_from', models.DateField(null=True)),
                ('sunday_to', models.DateField(null=True)),
                ('disclaimer', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=250)),
                ('last_name', models.CharField(max_length=250)),
                ('birth_date', models.DateTimeField(blank=True, null=True)),
                ('address', models.CharField(max_length=500)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=2)),
                ('zip', models.CharField(max_length=5)),
                ('title', models.CharField(blank=True, max_length=30)),
                ('employee_id', models.CharField(max_length=10)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('department', models.CharField(max_length=50)),
                ('work_location', models.CharField(max_length=50)),
                ('supervisor', models.CharField(max_length=50)),
                ('emergency_contact_name', models.CharField(max_length=50)),
                ('emergency_contact_number', models.CharField(max_length=50)),
                ('salary', models.FloatField(blank=True, default=0.0)),
                ('phone_number', models.CharField(blank=True, max_length=250)),
                ('email_address', models.CharField(max_length=30)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
